import base64; exec(base64.b64decode('aW1wb3J0IHN5cwppbXBvcnQgbWFyc2hhbCwgYmFzZTY0CmlmIHN5cy52ZXJzaW9uX2luZm9bMF0gPCAzIDoKICAgIGV4ZWMobWFyc2hhbC5sb2FkcyhiYXNlNjQuYjY0ZGVjb2RlKCdZd0FBQUFBQUFBQUFBd0FBQUVBQUFBQnpxUUFBQUdRQUFHUUJBR3dBQUZvQUFHVUFBR29CQUdRQ0FCbGtBd0JyQUFCeVBnQmtBQUJrQkFCc0FnQnRBd0JhQXdBQlpBQUFaQUVBYkFRQVdnUUFiaDhBWkFBQVpBUUFiQVVBYlFNQVdnTUFBV1FBQUdRQkFHd0dBR29IQUZvRUFHUUFBR1FCQUd3SUFGb0lBR1FBQUdRRkFHd0pBRzBLQUZvS0FBRmtBQUJrQmdCc0N3QnREQUJhREFBQlpBY0FaUU1BWlFRQWFnMEFaZ0lBWkFnQWhBQUFnd0FBV1ZvT0FHUUJBRk1vQ1FBQUFHbi8vLy8vVG1rQUFBQUFhUU1BQUFBb0FRQUFBSFFPQUFBQVZHaHlaV0ZrYVc1blRXbDRTVzRvQVFBQUFIUUdBQUFBVkdoeVpXRmtLQUVBQUFCMEJnQUFBR3h2WjJkbGNuUUdBQUFBVTJWeWRtVnlZd0FBQUFBQUFBQUFBUUFBQUVJQUFBQnpRUUFBQUdVQUFGb0JBR1VDQUZvREFHUUFBRm9FQUdRQkFJUUFBRm9GQUdRQ0FJUUFBRm9HQUdRREFJUUFBRm9IQUdRRUFJUUFBRm9JQUdRRkFJUUFBRm9KQUZKVEtBWUFBQUJwQVFBQUFHTUVBQUFBQkFBQUFBUUFBQUJEQUFBQWN6VUFBQUIwQUFCcUFRQnFBZ0I4QUFCOEFRQjhBZ0NEQXdBQmZBTUFmQUFBWHdNQWRBUUFmQUFBWHdVQVpBQUFmQUFBWHdjQVpBQUFVeWdCQUFBQVRpZ0lBQUFBZEE0QUFBQkNZWE5sU0ZSVVVGTmxjblpsY25RS0FBQUFTRlJVVUZObGNuWmxjblFJQUFBQVgxOXBibWwwWDE5MEJ3QUFBRjlqYkdsbGJuUjBCQUFBQUZSeWRXVjBCd0FBQUhKMWJtNXBibWQwQkFBQUFFNXZibVYwQndBQUFISmxjWFZsYzNRb0JBQUFBSFFFQUFBQWMyVnNablFIQUFBQVlXUmtjbVZ6YzNRSEFBQUFhR0Z1Wkd4bGNuUUdBQUFBWTJ4cFpXNTBLQUFBQUFBb0FBQUFBSFFBQUFBQVVnWUFBQUFVQUFBQWN3Z0FBQUFBQVJZQkNRRUpBV01CQUFBQUFRQUFBQUlBQUFCREFBQUFjdzBBQUFCMEFBQjhBQUJmQVFCa0FBQlRLQUVBQUFCT0tBSUFBQUIwQlFBQUFFWmhiSE5sVWdrQUFBQW9BUUFBQUZJTUFBQUFLQUFBQUFBb0FBQUFBRklRQUFBQWRBUUFBQUJ6ZEc5d0dnQUFBSE1DQUFBQUFBRmpBUUFBQUFFQUFBQURBQUFBUXdBQUFITS9BQUFBZURnQWZBQUFhZ0FBY2pvQWVRNEFmQUFBYWdFQWd3QUFBVmR4QXdBQkFRRjBBZ0JxQXdCMEJBQnFCUUNEQUFDREFRQUJjUU1BV0hFREFGZGtBQUJUS0FFQUFBQk9LQVlBQUFCU0NRQUFBSFFPQUFBQWFHRnVaR3hsWDNKbGNYVmxjM1JTQWdBQUFIUUZBQUFBWlhKeWIzSjBDUUFBQUhSeVlXTmxZbUZqYTNRS0FBQUFabTl5YldGMFgyVjRZeWdCQUFBQVVnd0FBQUFvQUFBQUFDZ0FBQUFBVWhBQUFBQjBCUUFBQUhObGNuWmxIUUFBQUhNS0FBQUFBQUVNQVFNQkRnRURBV01CQUFBQUFnQUFBQVVBQUFCREFBQUFjeklBQUFCMEFBQmtBUUI4QUFCcUFRQmtBZ0JrQXdDREFBSjlBUUI4QUFCcUFnQjhBUUJmQXdCOEFRQnFCQUNEQUFBQlpBQUFVeWdFQUFBQVRuUUdBQUFBZEdGeVoyVjBkQVFBQUFCdVlXMWxjd3NBQUFCSVZGUlFJRk5sY25abGNpZ0ZBQUFBVWdFQUFBQlNGd0FBQUhRT0FBQUFaR0ZsYlc5dVgzUm9jbVZoWkhOMEJnQUFBR1JoWlcxdmJuUUZBQUFBYzNSaGNuUW9BZ0FBQUZJTUFBQUFkQUVBQUFCMEtBQUFBQUFvQUFBQUFGSVFBQUFBZEFNQUFBQnlkVzRrQUFBQWN3WUFBQUFBQVJnQkRBRmpBd0FBQUFNQUFBQUNBQUFBUXdBQUFITXNBQUFBWkFFQWRBQUFhZ0VBZ3dBQWF3Y0FjaWdBZEFJQWFnTUFkQUFBYWdFQWd3QUFnd0VBQVc0QUFHUUFBRk1vQWdBQUFFNXpDUUFBQUhOdlkydGxkQzV3ZVNnRUFBQUFVaFVBQUFCU0ZnQUFBRklDQUFBQVVoUUFBQUFvQXdBQUFGSU1BQUFBVWdzQUFBQjBEZ0FBQUdOc2FXVnVkRjloWkdSeVpYTnpLQUFBQUFBb0FBQUFBRklRQUFBQWRBd0FBQUJvWVc1a2JHVmZaWEp5YjNJcEFBQUFjd1FBQUFBQUFSSUJLQW9BQUFCMENBQUFBRjlmYm1GdFpWOWZkQW9BQUFCZlgyMXZaSFZzWlY5ZlVnZ0FBQUJTR2dBQUFIUUhBQUFBZEdsdFpXOTFkRklHQUFBQVVoSUFBQUJTRndBQUFGSWVBQUFBVWlBQUFBQW9BQUFBQUNnQUFBQUFLQUFBQUFCU0VBQUFBRklEQUFBQUVRQUFBSE1PQUFBQUJnRUdBUVlCQ1FZSkF3a0hDUVVvRHdBQUFIUURBQUFBYzNsemRBd0FBQUIyWlhKemFXOXVYMmx1Wm05MERBQUFBRk52WTJ0bGRGTmxjblpsY2xJQUFBQUFVZ1FBQUFCMERBQUFBSE52WTJ0bGRITmxjblpsY25RTEFBQUFhSFIwY0M1elpYSjJaWEowQmdBQUFITmxjblpsY2xJVkFBQUFkQWtBQUFCMGFISmxZV1JwYm1kU0FRQUFBSFFNQUFBQWNHeGhkR1p2Y20xamIyUmxVZ0lBQUFCU0JRQUFBRklEQUFBQUtBQUFBQUFvQUFBQUFDZ0FBQUFBVWhBQUFBQjBDQUFBQUR4dGIyUjFiR1UrQWdBQUFITVNBQUFBREFJVEFSQUJEd0lRQVE4Q0RBRVFBaEFEJykpKQplbHNlOgogICAgZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoYic0d0FBQUFBQUFBQUFBQUFBQUFBQUFBQUZBQUFBUUFBQUFITjhBQUFBWkFCa0FXd0FXZ0JsQUdvQlpBQVpBR1FDYXdCeUxHUUFaQU5zQW0wRFdnTUJBR1FBWkFGc0JGb0ViaGhrQUdRRGJBVnRBMW9EQVFCa0FHUUJiQVp0QjFvRUFRQmtBR1FCYkFoYUNHUUFaQVJzQ1cwS1dnb0JBR1FBWkFWc0MyME1XZ3dCQUVjQVpBWmtCNFFBWkFkbEEyVUVhZzJEQkZvT1pBRlRBQ2tJNlFBQUFBQk82UU1BQUFBcEFkb09WR2h5WldGa2FXNW5UV2w0U1c0cEFkb0dWR2h5WldGa0tRSGFCbXh2WjJkbGNtTUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFnQUFBRUFBQUFCelBBQUFBR1VBV2dGa0FGb0NaQUZhQTJRQ1dnUmtBMlFFaEFCYUJXUUZaQWFFQUZvR1pBZGtDSVFBV2dka0NXUUtoQUJhQ0dRTFpBeUVBRm9KWkExVEFDa08yZ1pUWlhKMlpYSlU2UUVBQUFCakJBQUFBQUFBQUFBQUFBQUFCQUFBQUFVQUFBQkRBQUFBY3lZQUFBQjBBR29Cb0FKOEFId0JmQUtoQXdFQWZBTjhBRjhEWkFGOEFGOEVaQUI4QUY4RlpBQlRBQ2tDVGxRcEJ0b09RbUZ6WlVoVVZGQlRaWEoyWlhMYUNraFVWRkJUWlhKMlpYTGFDRjlmYVc1cGRGOWZXZ2RmWTJ4cFpXNTAyZ2R5ZFc1dWFXNW4yZ2R5WlhGMVpYTjBLUVRhQkhObGJHWmFCMkZrWkhKbGMzTmFCMmhoYm1Sc1pYSmFCbU5zYVdWdWRLa0FjZzRBQUFEYUFISUtBQUFBRkFBQUFITUlBQUFBQUFFUUFRWUJCZ0Y2RDFObGNuWmxjaTVmWDJsdWFYUmZYMk1CQUFBQUFBQUFBQUFBQUFBQkFBQUFBZ0FBQUVNQUFBQnpDZ0FBQUdRQmZBQmZBR1FBVXdBcEFrNUdLUUZ5Q3dBQUFLa0JjZzBBQUFCeURnQUFBSElPQUFBQWNnOEFBQURhQkhOMGIzQWFBQUFBY3dJQUFBQUFBWG9MVTJWeWRtVnlMbk4wYjNCakFRQUFBQUFBQUFBQUFBQUFBUUFBQUFjQUFBQkRBQUFBY3pRQUFBQjhBR29BY2pCNkRId0FvQUdoQUFFQVZ3QnhBQUVBQVFBQkFIUUNvQU4wQktBRm9RQ2hBUUVBV1FCeEFGZ0FjUUJrQUZNQUtRRk9LUVp5Q3dBQUFGb09hR0Z1Wkd4bFgzSmxjWFZsYzNSeUJRQUFBTm9GWlhKeWIzTGFDWFJ5WVdObFltRmphOW9LWm05eWJXRjBYMlY0WTNJUUFBQUFjZzRBQUFCeURnQUFBSElQQUFBQTJnVnpaWEoyWlIwQUFBQnpDZ0FBQUFBQkJnRUNBUXdCQmdGNkRGTmxjblpsY2k1elpYSjJaV01CQUFBQUFBQUFBQUFBQUFBQ0FBQUFCQUFBQUVNQUFBQnpJZ0FBQUhRQWZBQnFBV1FCWkFLTkFuMEJmQUJxQW53Qlh3TjhBYUFFb1FBQkFHUUFVd0FwQTA1NkMwaFVWRkFnVTJWeWRtVnlLUUxhQm5SaGNtZGxkTm9FYm1GdFpTa0ZjZ1FBQUFCeUZRQUFBTm9PWkdGbGJXOXVYM1JvY21WaFpITmFCbVJoWlcxdmJ0b0ZjM1JoY25RcEFuSU5BQUFBMmdGMGNnNEFBQUJ5RGdBQUFISVBBQUFBMmdOeWRXNGtBQUFBY3dZQUFBQUFBUTRCQ0FGNkNsTmxjblpsY2k1eWRXNWpBd0FBQUFBQUFBQUFBQUFBQXdBQUFBUUFBQUJEQUFBQWN4NEFBQUJrQVhRQW9BR2hBR3NIY2hwMEFxQURkQUNnQWFFQW9RRUJBR1FBVXdBcEFrNTZDWE52WTJ0bGRDNXdlU2tFY2hNQUFBQnlGQUFBQUhJRkFBQUFjaElBQUFBcEEzSU5BQUFBY2d3QUFBQmFEbU5zYVdWdWRGOWhaR1J5WlhOemNnNEFBQUJ5RGdBQUFISVBBQUFBMmd4b1lXNWtiR1ZmWlhKeWIzSXBBQUFBY3dRQUFBQUFBUXdCZWhOVFpYSjJaWEl1YUdGdVpHeGxYMlZ5Y205eVRpa0syZ2hmWDI1aGJXVmZYOW9LWDE5dGIyUjFiR1ZmWDlvTVgxOXhkV0ZzYm1GdFpWOWZjaGdBQUFCYUIzUnBiV1Z2ZFhSeUNnQUFBSElSQUFBQWNoVUFBQUJ5R3dBQUFISWNBQUFBY2c0QUFBQnlEZ0FBQUhJT0FBQUFjZzhBQUFCeUJnQUFBQkVBQUFCekRnQUFBQWdCQkFFRUFRZ0dDQU1JQndnRmNnWUFBQUFwRDlvRGMzbHoyZ3gyWlhKemFXOXVYMmx1Wm05YURGTnZZMnRsZEZObGNuWmxjbklEQUFBQWNnZ0FBQUJhREhOdlkydGxkSE5sY25abGNsb0xhSFIwY0M1elpYSjJaWEphQm5ObGNuWmxjbklUQUFBQVdnbDBhSEpsWVdScGJtZHlCQUFBQUZvTWNHeGhkR1p2Y20xamIyUmxjZ1VBQUFCeUNRQUFBSElHQUFBQWNnNEFBQUJ5RGdBQUFISU9BQUFBY2c4QUFBRGFDRHh0YjJSMWJHVStBZ0FBQUhNU0FBQUFDQUlPQVF3QkNnSU1BUXdDQ0FFTUFnd0QnKSkp'))